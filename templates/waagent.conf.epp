<%- | Enum['y','n'] $provisioning,
      Enum['y','n'] $delete_root_password,
      Enum['y','n'] $regenerate_ssh_key,
      Enum['rsa','dsa','ecdsa'] $ssh_key_type,
      Enum['y','n'] $monitor_hostname,
      Enum['y','n'] $resource_disk_format,
      Enum['ext3','ext4'] $resource_disk_filesystem,
      Stdlib::UnixPath $resource_disk_mountpoint,
      Enum['y','n'] $resource_disk_swap,
      Integer $resource_disk_swap_size,
      Enum['y','n'] $verbose_logs,
| -%>
#
# Windows Azure Linux Agent Configuration
#
# Automatically generated by Puppet for <%= $facts[fqdn] %>. Do not modify!

Role.StateConsumer=None                 # Specified program is invoked with "Ready" or "Shutdown".
                                        # Shutdown will be initiated only after the program returns. Windows Azure will
                                        # power off the VM if shutdown is not completed within ?? minutes.
Role.ConfigurationConsumer=None         # Specified program is invoked with XML file argument specifying role configuration.
Role.TopologyConsumer=None              # Specified program is invoked with XML file argument specifying role topology.

Provisioning.Enabled=<%= $provisioning %>                  #
Provisioning.DeleteRootPassword=<%= $delete_root_password %>       # Password authentication for root account will be unavailable.
Provisioning.RegenerateSshHostKeyPair=<%= $regenerate_ssh_key %> # Generate fresh host key pair.
Provisioning.SshHostKeyPairType=<%= $ssh_key_type %>     # Supported values are "rsa", "dsa" and "ecdsa".
Provisioning.MonitorHostName=<%= $monitor_hostname %>          # Monitor host name changes and publish changes via DHCP requests.

ResourceDisk.Format=<%= $resource_disk_format %>                   # Format if unformatted. If 'n', resource disk will not be mounted.
ResourceDisk.Filesystem=<%= $resource_disk_filesystem %>            #
ResourceDisk.MountPoint=<%= $resource_disk_mountpoint %>           #
ResourceDisk.EnableSwap=<%= $resource_disk_swap %>                 # Create and use swapfile on resource disk.
ResourceDisk.SwapSizeMB=<%= $resource_disk_swap_size %>            # Size of the swapfile.

LBProbeResponder=y                      # Respond to load balancer probes if requested by Windows Azure.

Logs.Verbose=<%= $verbose_logs %>                          #

OS.RootDeviceScsiTimeout=300            # Root device timeout in seconds.
OS.OpensslPath=None                     # If "None", the system default version is used.
